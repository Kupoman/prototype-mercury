# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Gen LFS Cache Key File
      run: git lfs ls-files -l > lsf-cache-key
    - name: Cache Git LFS
      uses: actions/cache@v1
      id: cache-git-lfs
      with:
        path: .git/lfs
        key: ${{ runner.os }}-${{ hashFiles('**/lsf-cache-key') }}
    - name: Git LFS
      if: steps.cache-git-lfs.cache-hit != 'true'
      run: git lfs pull
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
    - name: Install Blender
      run: |
        sudo snap install blender --classic
        echo "::add-path::/snap/bin"
    - name: Convert Assets
      run: |
        echo $PATH
        blender --version
        pman build
    - name: Run Tests
      run: |
        pman test
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Gen LFS Cache Key File
      run: git lfs ls-files -l > lsf-cache-key
    - name: Cache Git LFS
      uses: actions/cache@v1
      id: cache-git-lfs
      with:
        path: .git/lfs
        key: ${{ runner.os }}-${{ hashFiles('**/lsf-cache-key') }}
    - name: Git LFS
      if: steps.cache-git-lfs.cache-hit != 'true'
      run: git lfs pull
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
    - name: Install Blender
      run: |
        sudo snap install blender --classic
        echo "::add-path::/snap/bin"
    - name: Build Binary Distributions
      run: |
        blender --version
        pman dist --skip-installers
    - name: Publish Windows Binary
      uses: josephbmanley/butler-publish-itchio-action@v1.0.1
      if: github.ref == 'refs/heads/master'
      env:
        BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
        CHANNEL: windows-dev
        ITCH_GAME: mercury
        ITCH_USER: mogurijin
        PACKAGE: build/win_amd64
    - name: Publish Linux Binary
      uses: josephbmanley/butler-publish-itchio-action@v1.0.1
      if: github.ref == 'refs/heads/master'
      env:
        BUTLER_CREDENTIALS: ${{ secrets.BUTLER_CREDENTIALS }}
        CHANNEL: linux-dev
        ITCH_GAME: mercury
        ITCH_USER: mogurijin
        PACKAGE: build/manylinux1_x86_64
